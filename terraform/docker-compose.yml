networks:
  minecraft-net:
    driver: bridge
  monitoring:
    driver: bridge

services:
  mc-sobrevivencia:
    image: itzg/minecraft-server
    container_name: mc-sobrevivencia
    restart: unless-stopped
    ports:
      - "25566:25565"
    volumes:
      # mundo + dados persistentes
      - ./sobrevivencia-data:/data

      # pasta única de configs (server.properties, paper-global.yml, spigot.yml, forwarding.secret)
      - ./paper/configs:/config

      # plugins baixados pelo CI (agora com permissão de escrita pra .paper-remapped)
      - ./paper/plugins:/data/plugins

    environment:
      EULA: "TRUE"
      TYPE: "PAPER"
      MEMORY: "10G"
      ONLINE_MODE: "false"
      VELOCITY_ENABLED: "true"
      VELOCITY_SECRET_FILE: "/config/forwarding.secret"
      VERSION: "1.21.8"

    networks:
      - minecraft-net
      - monitoring
    depends_on:
      - velocity-proxy

  velocity-proxy:
    image: itzg/mc-proxy
    container_name: velocity-proxy
    restart: unless-stopped
    ports:
      - "25565:25577"
    volumes:
      # configs e secret do proxy
      - ./velocity:/config

      # plugins do proxy (se usar)
      - ./velocity/plugins:/config/plugins

    environment:
      TYPE: "VELOCITY"
      MEMORY: "1G"
    networks:
      - minecraft-net
      - monitoring

      # MONITORING
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    restart: unless-stopped
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/data:/prometheus # Persistência de dados
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana:/var/lib/grafana # Persistência de dashboards
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
      - loki

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./monitoring/loki/config.yml:/etc/loki/config.yml
      - ./monitoring/loki/data:/data # Persistência de logs
    ports:
      - "3100:3100"
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    volumes:
      # Monta diretórios essenciais para ler logs e o socket Docker
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./monitoring/promtail/config.yml:/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      - loki

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    command:
      - "--path.rootfs=/host"
    volumes:
      # Expõe o sistema operacional da VM para coletar métricas do host
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host:ro,rslave
    ports:
      - "9100:9100"
    networks:
      - monitoring
